#!/usr/bin/env bash
# vim: set filetype=bash: Vim doesn't handle .sh.tmpl well

# todo: split each into its own script

set -ueo pipefail
pushd "$(mktemp -d)" > /dev/null 2>&1





#####################################################
# CONVENIENCE FUNCTIONS #############################
#####################################################

chezlog() {
    printf "[chezmoi] $1\n"
}

prompt_yn() {
    while true; do
        read -p "$1 (y/n)? " yn
        case $yn in
            [Yy]* ) return 1;;
            [Nn]* ) return 0;;
        esac
    done
}

check() {
    chezlog "Checking if $1 is installed"
    if ! which $1 > /dev/null 2>&1; then
        return 1
    fi
    chezlog "$1 executable found at $(which $1)"
    return 0
}

#####################################################
#####################################################
#####################################################







#####################################################
# HOMEBREW ##########################################
#####################################################

echo
if ! check brew; then
    chezlog "Homebrew installation not found"
    {{ if .has_root }}
    chezlog "Installing Homebrew as root"
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
    {{ else }}
    chezlog "Installing Homebrew to ~/.homebrew"
    mkdir -p $HOME/.homebrew
    pushd $HOME
    curl -L https://github.com/Homebrew/brew/tarball/master | tar xz --strip 1 -C .homebrew
    eval "$(.homebrew/bin/brew shellenv)"
    brew update --force --quiet
    chmod -R go-w "$(brew --prefix)/share/zsh"
    popd
    {{ end }}
    chezlog "Successfully installed Homebrew"
fi

echo
chezlog "Using brew bundle with the following Brewfile:\n"

{{ if .has_root }}
cat {{ .chezmoi.sourceDir -}}/Brewfile_extra_if_has_root | tee -a Brewfile
{{ else }}
cat {{ .chezmoi.sourceDir -}}/Brewfile_extra_if_not_root | tee -a Brewfile
{{ end }}
cat {{ .chezmoi.sourceDir -}}/Brewfile_default | tee -a Brewfile

brew bundle
chezlog "Successfully ran brew bundle"

#####################################################
#####################################################
#####################################################






#####################################################
# PYTHON ############################################
#####################################################

echo
chezlog "Installing Python 3.10.0 with pyenv"
pyenv install --skip-existing 3.10.0
pyenv global 3.10.0
chezlog "Successfully installed Python 3.10.0 with pyenv"

echo
chezlog "Installing the following Python packages"
cat {{ .chezmoi.sourceDir -}}/requirements.txt | tee -a reqs.txt
pip install -r reqs.txt
chezlog "Successfully installed the above packages"

#####################################################
#####################################################
#####################################################





#####################################################
# FISH ##############################################
#####################################################

echo
if ! check fish; then
    chezlog "fish installation not found"
    chezlog "Installing fish with brew"
    brew install fish
    chezlog "Successfully installed fish"
fi

echo
chezlog "Checking if login shell is set to fish"
if [[ $SHELL != `which fish` ]]; then
    chezlog "Login shell is currently $SHELL"
    chezlog "Attempting to set the login shell to $(which fish)"
    while ! chsh -s `which fish`; do
        if ! prompt_yn "Failed, try again"; then
            break;
        fi
        chezlog "Trying again"
    done
else
    chezlog "Login shell is set to fish"
fi

echo
if ! fish -c 'fisher' > /dev/null 2>&1; then
    fish -c 'curl -sL https://git.io/fisher | source && fisher install jorgebucaran/fisher'
    chezlog "Successfully installed fisher"
fi


# plugins are tracked automatically, just run
#          fisher install <plugin>
# no need to add the plugin below.
echo
chezlog "Updating fisher and re-installing plugins"
fish -c 'fisher update'  
chezlog "Successfully updated fisher and re-installed plugins"

echo
chezlog "Defining fish abbreviations"
fish -c "abbr -a -U -- l 'ls -lAFh'"
fish -c "abbr -a -U -- cm chezmoi"
fish -c "abbr -a -U -- vi nvim"
fish -c "abbr -a -U -- clac 'ssh -X tb2960@clac.cs.columbia.edu'"
fish -c "abbr -a -U -- lmk 'latexmk'"
chezlog "Successfully defined fish abbreviations" 

echo
chezlog "Setting up fish theme"
fish -c "set -U fish_color_normal normal"
fish -c "set -U fish_color_command 93a1a1"
fish -c "set -U fish_color_quote 657b83"
fish -c "set -U fish_color_redirection 6c71c4"
fish -c "set -U fish_color_end 268bd2"
fish -c "set -U fish_color_error dc322f"
fish -c "set -U fish_color_param 839496"
fish -c "set -U fish_color_comment 586e75"
fish -c "set -U fish_color_match --background=brblue"
fish -c "set -U fish_color_selection white --bold --background=brblack"
fish -c "set -U fish_color_search_match bryellow --background=black"
fish -c "set -U fish_color_history_current --bold"
fish -c "set -U fish_color_operator 00a6b2"
fish -c "set -U fish_color_escape 00a6b2"
fish -c "set -U fish_color_cwd green"
fish -c "set -U fish_color_cwd_root red"
fish -c "set -U fish_color_valid_path --underline"
fish -c "set -U fish_color_autosuggestion 586e75"
fish -c "set -U fish_color_user brgreen"
fish -c "set -U fish_color_host normal"
fish -c "set -U fish_color_cancel -r"
fish -c "set -U fish_pager_color_completion B3A06D"
fish -c "set -U fish_pager_color_description B3A06D"
fish -c "set -U fish_pager_color_prefix cyan --underline"
fish -c "set -U fish_pager_color_progress brwhite --background=cyan"
chezlog "Successfully set up fish theme"


#####################################################
#####################################################
#####################################################







#####################################################
# DEFAULTS ##########################################
#####################################################

defaults write com.googlecode.iterm2 LoadPrefsFromCustomFolder 1
defaults write com.googlecode.iterm2 PrefsCustomFolder {{ .chezmoi.homeDir -}}/.config/iterm2

#####################################################
#####################################################
#####################################################



popd > /dev/null 2>&1
