# General
# =======

set -g history-limit 10000        # scrollback
set -g focus-events on            # tmux can forward 'Alacritty window focused' event
set -g status-keys emacs          # emacs bindings in command mode (vi glitches with ESC)
set -g display-time 4000          # ms, duration of tmux notifications
set -g status-interval 1          # s, how frequently the status bar is redrawn
set -g set-clipboard on           # connects system clipboard to tmux, google 'OSC 52'
set -g base-index 1               # start numbering sessions with 1 instead of 0
set -g renumber-windows on        # renumber windows when one is closed
set -g mouse on                   # use mouse to select windows, resize panes, etc

set -g default-terminal "screen-256color"
# tell Tmux that outside terminal supports true color
set -ga terminal-overrides ",xterm-256color*:Tc"


# Server-specific
# ===============

set -g -s escape-time 0           # no delay when hitting ESC


# Window-specific
# ===============

set -g -w mode-keys vi            # when in copy mode, use vi
set -g -w aggressive-resize on    # keep up with size of macOS window
set -g -w pane-base-index 1       # start numbering windows with 1 instead of 0


# Key bindings
# ============

bind r source-file ~/.config/tmux/tmux.conf              # reload tmux config file
bind -T copy-mode-vi 'v' send-keys -X begin-selection    # use 'v' to select text in copy mode
bind '"' split-window -c "#{pane_current_path}"          # open new window in same directory
bind % split-window -h -c "#{pane_current_path}"         # ditto
bind c new-window -c "#{pane_current_path}"              # ditto
bind y new-session                                       # no keybinding by default, so use 'y'

bind-key , command-prompt -p (rename-window) "rename-window '%%'"      # hide current name when renaming window
bind-key $ command-prompt -p (rename-session) "rename-session '%%'"    # hide current name when renaming session

# Within vim
# ==========

is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
# if $is_vim, we are inside vim (from https://github.com/christoomey/vim-tmux-navigator)

bind h if-shell $is_vim  'send-keys C-h'  'select-pane -L'   # let vim handle pane-switching
bind j if-shell $is_vim  'send-keys C-j'  'select-pane -D'   # ditto
bind k if-shell $is_vim  'send-keys C-k'  'select-pane -U'   # ditto
bind l if-shell $is_vim  'send-keys C-l'  'select-pane -R'   # ditto

bind C-h  if-shell $is_vim  'send-keys C-Left'   'resize-pane -L 5'   # let vim handle pane-resizing
bind C-j  if-shell $is_vim  'send-keys C-Down'   'resize-pane -D 5'   # ditto
bind C-k  if-shell $is_vim  'send-keys C-Up'     'resize-pane -U 5'   # ditto
bind C-l  if-shell $is_vim  'send-keys C-Right'  'resize-pane -R 5'   # ditto

bind x if-shell $is_vim  'send-keys C-x'  'kill-pane'  # manually remap to bypass "are u sure?" for ⌘W


# Theme
# =====

set -g status-justify      'centre'
set -g status-style        'bg=default fg=colour15'                     # NOTE: must use colour, not color
set -g status-right        '#[bg=colour8] %h %d │ %-I:%M %p '
set -g status-left         '#[bg=colour8] #S '
set -g status-left-length  50

set -g -w window-status-current-format  ' #I#[fg=colour249]:#[fg=colour15]#W '
set -g -w window-status-current-style   'bold bg=colour8'

set -g -w window-status-format  ' #I#[fg=colour245]:#[fg=colour15]#W '
set -g -w window-status-style   ''

set -g -w window-status-bell-style  'fg=colour255 bg=colour1 bold'
set -g message-style                'bg=colour8 fg=colour15'
