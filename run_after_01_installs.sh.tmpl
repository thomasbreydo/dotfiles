#!/usr/bin/env bash
# vim: set filetype=bash: Vim doesn't handle .sh.tmpl well

set -ueo pipefail

set -ueo pipefail
pushd "$(mktemp -d)" > /dev/null 2>&1
source {{ .extras_dir -}}/script_utils.sh





#####################################################
# HOMEBREW ##########################################
#####################################################

if [[ -f "{{ .chezmoi.homeDir }}/.homebrew/bin/brew" ]]; then
    eval "$({{ .chezmoi.homeDir }}/.homebrew/bin/brew shellenv)"
fi


echo
if ! check_available brew; then
    chezlog "Homebrew installation not found"
    {{ if .has_root }}
    chezlog "Installing Homebrew as root"
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
    {{ else }}
    chezlog "Installing Homebrew to ~/.homebrew"
    mkdir -p $HOME/.homebrew
    pushd $HOME
    curl -L https://github.com/Homebrew/brew/tarball/master | tar xz --strip 1 -C .homebrew
    eval "$(.homebrew/bin/brew shellenv)"
    brew update --force --quiet
    chmod -R go-w "$(brew --prefix)/share/zsh"
    popd
    {{ end }}
    chezlog "Successfully installed Homebrew"
fi

echo
chezlog "Using brew bundle with the following Brewfile:\n"

{{ if .has_root }}
cat {{ .extras_dir -}}/Brewfile_extra_if_has_root | tee -a Brewfile
{{ else }}
cat {{ .extras_dir -}}/Brewfile_extra_if_not_root | tee -a Brewfile
{{ end }}
cat {{ .extras_dir -}}/Brewfile_default | tee -a Brewfile

brew bundle
chezlog "Successfully ran brew bundle"






#####################################################
# PYTHON ############################################
#####################################################

echo
chezlog "Installing Python 3.10.0 with pyenv"
pyenv install --skip-existing 3.10.0
pyenv global 3.10.0
chezlog "Successfully installed Python 3.10.0 with pyenv"

echo
chezlog "Installing the following Python packages"
cat {{ .extras_dir -}}/requirements.txt | tee -a reqs.txt
pip install -r reqs.txt
chezlog "Successfully installed the above packages"






#####################################################
# FISH ##############################################
#####################################################

echo
if ! check_available fish; then
    chezlog "Did not find fish installed"
    chezlog "Installing fish with brew"
    brew install fish
    chezlog "Successfully installed fish"
fi

echo
chezlog "Checking if login shell is set to fish"
if [[ $SHELL != `which fish` ]]; then
    chezlog "Login shell is currently $SHELL"
    chezlog "Attempting to set the login shell to $(which fish)"
    while ! chsh -s `which fish`; do
        if ! prompt_yn "Failed, try again"; then
            break;
        fi
        chezlog "Trying again"
    done
else
    chezlog "Login shell is set to fish"
fi

echo
chezlog "Checking if fisher is installed"
if ! fish -c 'fisher' > /dev/null 2>&1; then
    chezlog "Did not find fisher installed"
    chezlog "Installing fisher"
    fish -c 'curl -sL https://git.io/fisher | source && fisher install jorgebucaran/fisher'
    chezlog "Successfully installed fisher"
else
    chezlog "Found fisher installed"
fi


echo
chezlog "Updating fisher and re-installing plugins"
fish -c 'fisher update'
chezlog "Successfully updated fisher and re-installed plugins"

echo
chezlog "Defining fish abbreviations"
fish {{ .extras_dir -}}/setup_abbrs.fish
chezlog "Successfully defined fish abbreviations" 

echo
chezlog "Setting up fish theme"
fish {{ .extras_dir -}}/setup_theme.fish
chezlog "Successfully set up fish theme"

echo
chezlog "Setting up fish variables"
fish {{ .extras_dir -}}/setup_uvars.fish
chezlog "Successfully set up fish variables"


echo
chezlog "Setting up fish functions"
fish {{ .extras_dir -}}/setup_funcs.fish
chezlog "Successfully set up fish functions"

echo
chezlog "Installing gems"
gem install zsteg  --user-install
chezlog "Successfully installed gems"


popd > /dev/null 2>&1

